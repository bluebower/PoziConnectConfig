[User Settings]
Input_Asset_Dir:
Output_Dir: output
SQLite_Database: {Output_Dir}/Mitchell.sqlite

[General Settings]
Description:
    Generate road segments

[Conquest Roads]
Source: {Input_Asset_Dir}/Conquest Roads.TAB
Destination: {SQLite_Database},conquest_roads
GeometryType: GEOMETRY
AssignCoordSys: EPSG:28355

[Conquest Roads - casting simple geometries to LINESTRINGs]
OGRInfoOnly: true
Destination: {SQLite_Database},conquest_roads
SQL: update conquest_roads set GEOMETRY=CastToSingle(GeometryN(GEOMETRY,1)) where GeometryType(GEOMETRY)='MULTILINESTRING' and ST_IsSimple(GEOMETRY)

[Conquest Roads - multilinestring export]
Source: {SQLite_Database},conquest_roads
Where: GeometryType(GEOMETRY)='MULTILINESTRING'
Destination: {Output_Dir}/conquest_roads_multilinestring.tab
Overwrite: true

[Conquest Roads - multilinestrings removal]
OGRInfoOnly: true
Destination: {SQLite_Database},conquest_roads
SQL: delete from conquest_roads where GeometryType(GEOMETRY)='MULTILINESTRING'

[Conquest Seals]
Source: {Input_Asset_Dir}/Road_Data_from_Conquest_Seals.csv
Destination: {SQLite_Database},conquest_roads_seals

[Bulk correction of asset chainage start/stop formatting (1)]
Destination: {SQLite_Database},dummy
SQL: update conquest_roads_seals set "Segment Start Point / Chainage"=replace("Segment Start Point / Chainage",'Ch ','')
OGRInfoOnly: true

[Bulk correction of asset chainage start/stop formatting (2)]
Destination: {SQLite_Database},dummy
SQL: update conquest_roads_seals set "Segment End Point / Chainage"=replace("Segment End Point / Chainage",'Ch ','')
OGRInfoOnly: true

[Conquest Pavement Sealed]
Source: {Input_Asset_Dir}/Road_Data_from_Conquest_Pavement_Sealed.csv
Destination: {SQLite_Database},conquest_pavement_sealed

[Bulk correction of asset chainage start/stop formatting (3)]
Destination: {SQLite_Database},dummy
SQL: update conquest_pavement_sealed set "Segment Start Point / Chainage"=replace("Segment Start Point / Chainage",'Ch ','')
OGRInfoOnly: true

[Bulk correction of asset chainage start/stop formatting (4)]
Destination: {SQLite_Database},dummy
SQL: update conquest_pavement_sealed set "Segment End Point / Chainage"=replace("Segment End Point / Chainage",'Ch ','')
OGRInfoOnly: true

[Conquest Pavement Unsealed]
Source: {Input_Asset_Dir}/Road_Data_from_Conquest_Pavement_Unsealed.csv
Destination: {SQLite_Database},conquest_pavement_unsealed

[Bulk correction of asset chainage start/stop formatting (5)]
Destination: {SQLite_Database},dummy
SQL: update conquest_pavement_unsealed set "Segment Start Point / Chainage"=replace("Segment Start Point / Chainage",'Ch ','')
OGRInfoOnly: true

[Bulk correction of asset chainage start/stop formatting (6)]
Destination: {SQLite_Database},dummy
SQL: update conquest_pavement_unsealed set "Segment End Point / Chainage"=replace("Segment End Point / Chainage",'Ch ','')
OGRInfoOnly: true

[Conquest Pavement Formations]
Source: {Input_Asset_Dir}/Road_Data_from_Conquest_Formations.csv
Destination: {SQLite_Database},conquest_formations

[Bulk correction of asset chainage start/stop formatting (7)]
Destination: {SQLite_Database},dummy
SQL: update conquest_formations set "Segment Start Point / Chainage"=replace("Segment Start Point / Chainage",'Ch ','')
OGRInfoOnly: true

[Bulk correction of asset chainage start/stop formatting (8)]
Destination: {SQLite_Database},dummy
SQL: update conquest_formations set "Segment End Point / Chainage"=replace("Segment End Point / Chainage",'Ch ','')
OGRInfoOnly: true

[Conquest Segments]
Source: {SQLite_Database},conquest_roads
SQLProcessing: OGR
SQLFile: tasks\Mitchell\SQL\Mitchell Road Segmentation.sql
Destination: {SQLite_Database},conquest_road_segments
GeometryType: LINESTRING

[Conquest Segments - Reversing when possible]
Destination: {SQLite_Database},dummy
SQL: update conquest_road_segments set geometry=ST_Reverse(geometry) WHERE flagDirection1=0 and flagDirection2=1
OGRInfoOnly: true

[Export 1 - Spatial Road Segments]
Source: {SQLite_Database},conquest_road_segments
SQL: select AssetID,type,AssetStartRoad,ParentID,ParentDesc,FlagDirection1 as matchStart,FlagDirection2 as matchEnd,ch1_orig as ch1,ch2_orig as ch2,ST_Length(ST_Line_Substring ( geometry , cast(ch1_frac as double), min(1.0,cast(ch2_frac as double)))) as seg_length_m,ST_Length(geometry) as parent_length_m,ch1_frac as fraction1,ch2_frac as fraction2,ST_Line_Substring ( geometry , cast(ch1_frac as double), min(1.0,cast(ch2_frac as double))) as geometry from conquest_road_segments
Destination: {Output_Dir}/road_segments.tab
Overwrite: true

[Export 2 - unsegmented assets (assets that were not successfully segmented)]
Source: {SQLite_Database},conquest_road_segments
Destination: {Output_Dir}/assets_unsegmented.csv
SQL: select distinct assetID from (select distinct cast(assetID as integer) as assetID from conquest_formations union select distinct cast(assetID as integer) from conquest_pavement_sealed union select distinct cast(assetID as integer) from conquest_pavement_unsealed union select distinct cast(assetID as integer) from conquest_roads_seals) t where assetID not in (select r.assetid from conquest_road_segments r)
Overwrite: true
